Spreadsheet Formulas



Sum of matching range from another sheet

Using this formula to provide sum of episode scores per contestant based on score per task where episode ID matches in both sheets.
It will sum all the values in column M on the "tasks" sheet where the corresponding value in column B matches the value in cell B2.


‭=SUMIF(tasks!B:B, B2, tasks!M:M)‬

Explanation
tasks!B:B: This is the value of episode ID in both sheets.
B2: This is the first cell to place the result.
tasks!M:M: This is the range of values to sum on column M on the "tasks" sheet.



------------


Textjoin scores to names in a single csv cell.
Using this to create a column that info from task scores, matches it with appropriate contestants, and sorts by highest score.


The formula takes a list of names and their corresponding scores,
formats them as "Name (Score)", sorts them based on scores from
highest to lowest, and then concatenates them into a single comma-separated string.


=TEXTJOIN(", ", TRUE, INDEX(SORT(ARRAYFORMULA(TRANSPOSE(SPLIT(R2, ",")) & " (" & TRANSPOSE(M2:Q2) & ")"), VALUE(REGEXEXTRACT(ARRAYFORMULA(TRANSPOSE(SPLIT(R2, ",")) & " (" & TRANSPOSE(M2:Q2) & ")"), "\((\d+)\)")), FALSE), , 1))


Explanation. There's a lot going on here:

    SPLIT(R2, ","):
        This splits the CSV in cell R2 into an array of names.

    TRANSPOSE(SPLIT(R2, ",")):
        Transposes the array of names into a vertical array (one name per row).

    TRANSPOSE(M2:Q2):
        Transposes the horizontal array of scores in M2:Q2 into a vertical array (one score per row).

    ARRAYFORMULA(TRANSPOSE(SPLIT(R2, ",")) & " (" & TRANSPOSE(M2:Q2) & ")"):
        Combines the names and their corresponding scores into a single array with each entry formatted as "Name (Score)".

    REGEXEXTRACT(ARRAYFORMULA(TRANSPOSE(SPLIT(R2, ",")) & " (" & TRANSPOSE(M2:Q2) & ")"), "\((\d+)\)"):
        Extracts the numeric scores from each formatted string using regular expressions.

    VALUE(REGEXEXTRACT(...)):
        Converts the extracted scores from text to numeric values.

    SORT(..., VALUE(REGEXEXTRACT(...)), FALSE):
        Sorts the array of formatted names and scores based on the numeric values extracted, in descending order (highest to lowest).

    INDEX(SORT(...), , 1):
        Returns the sorted array. The , , 1 ensures that all sorted values are included.

    TEXTJOIN(", ", TRUE, INDEX(...)):
        Joins all the sorted name-score pairs into a single CSV string, separated by commas.


------------


Filename as Cell Date

I'm using this to make work related daily logs.
After I create an excel spreadsheet template including this neat formula,
I use a bash shell script to make 30-31 copies standardized filenames (09.03.2024.xlsx)
So the formula uses that filename plant the date in a cell in each daily form.


Goal 1
Take the date from a filename and put in in a cell as Date: 09.03.2024

The filename as an example is: 09.03.2024.xlsx

="Date: "&MID(CELL("filename",A65),FIND("[",CELL("filename",A65))+1,FIND("]", CELL("filename",A65))-FIND("[",CELL("filename",A65))-6)

In this example I placed above in cell A65
and it became Date: 09.03.2024

Goal 2
In another cell I want that result formatted it so instead of dots it's slashes.
So in A3 I put:

=SUBSTITUTE(A65,".","/")

and A3 is now Date: 09/03/2024


------------


If this text, then this text or A column of Proper Names based on a column of Initials

I'm using this in my Taskmaster spreadsheets to provide a proper name for series types.


=IF(C2="S", "Regular Series", IF(C2="COC", "Champion of Champions", IF(C2="NYT", "New Years Treat", "")))


Explanation

Replace a cell with the reference to another cell.
This formula will return:

    "Regular Series" if the cell contains "S"
    "Champion of Champions" if the cell contains "COC"
    "New Years Treat" if the cell contains "NYT"
    An empty string "" if the cell contains something else.



------------


Here's another fun one I'm using on the taskmaster spreadsheets.
I needed the date range from another sheet but only where the series_id matches on it and my origin.
And why not place a nice dash between the dates.

=TEXT(MINIFS(episodes!E:E, episodes!A:A, H2), "MM/DD/YYYY") & " - " & TEXT(MAXIFS(episodes!E:E, episodes!A:A, H2), "MM/DD/YYYY")


    MINIFS(episodes!E:E, episodes!A:A, H2):
        MINIFS is used to find the minimum value within a range that meets specific criteria.
        episodes!E:E specifies the range to search for the minimum date.
        episodes!A:A specifies the criteria range where the series_id is located.
        H2 is the criteria value that must match the series_id in column A of the 'episodes' sheet.
        This function finds the earliest date from column E where the series_id in column A matches H2.

    TEXT(MINIFS(...), "MM/DD/YYYY"):
        TEXT converts the date returned by MINIFS into the specified date format, MM/DD/YYYY.

    MAXIFS(episodes!E:E, episodes!A:A, H2):
        MAXIFS is used to find the maximum value within a range that meets specific criteria.
        Similar to MINIFS, it looks in episodes!E:E for the maximum date where the series_id in column A matches H2.

    TEXT(MAXIFS(...), "MM/DD/YYYY"):
        TEXT converts the date returned by MAXIFS into the MM/DD/YYYY format.

    Concatenation (& " - " &):
        This concatenates the earliest date, a dash (-), and the most recent date into a single text string.




------------




Easy one:

Count the number of times my series_id value shows up on episodes series_id col
So I can report the total number of episodes in a given series on my series sheet


=COUNTIFS(episodes!E:E, A2)

	episodes!E:E specifies the range to count within (where series_id values are located on my episodes sheet).
	
	A2 is the criteria (the series_id from my series sheet).





------------


Taskmaster task winner
Return the names of the contestant from a CSV cell where the name match the highest score from a series of cells.


=INDEX(SPLIT(R2, ","), MATCH(MAX(M2:Q2), M2:Q2, 0))
	
	SPLIT(R2, ","): Splits the names in R2 (CSV of names corresponding to the contestants) by commas.
	
	MAX(M2:Q2): Finds the highest score in M2:Q2.

	MATCH(MAX(M2:Q2), M2:Q2, 0): Finds the position of the highest score in the range M2:Q2.

	INDEX(SPLIT(R2, ","), ...): Returns the name that corresponds to the position of the highest score.


BUT WAIT, THERE'S MORE:

That was my original thinking, but there's a wrinkle.
Sometimes a winner is not represented by highest number.
In the case of a tie-breaker, a winner is represented by a checkmark.


=IF(COUNTIF(M2:Q2, "✔"), INDEX(SPLIT(R2, ","), MATCH("✔", M2:Q2, 0)), INDEX(SPLIT(R2, ","), MATCH(MAX(M2:Q2), M2:Q2, 0)))


	COUNTIF(M2:Q2, "✔"): Checks if there is any cell with a checkmark (✔) in the range M2:Q2.

	INDEX(SPLIT(R2, ","), MATCH("✔", M2:Q2, 0)): If a checkmark exists, it returns the corresponding name from R2.

	INDEX(SPLIT(R2, ","), MATCH(MAX(M2:Q2), M2:Q2, 0)): If no checkmark is found, it defaults to returning the name of the person with the highest score.







------------

















